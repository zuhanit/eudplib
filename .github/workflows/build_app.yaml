name: Build eudplib 
on:
  release:
    types: [created]
  workflow_dispatch: 
  
env:
  BUILD_TYPE: Release
    
jobs:
  build_libepScript:
    strategy: 
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      
      - name: Cache CMake Build Directory
        uses: actions/cache@v3
        with:
          path: ./src/epscript/build
          key: cmake-build-${{ matrix.os }}-${{ env.BUILD_TYPE }}-${{ hashFiles('./src/epscript/**/*') }}
          restore-keys: |
            cmake-build-${{ matrix.os}}-${{ env.BUILD_TYPE }}
            cmake-build-${{ matrix.os }}
            cmake-build
      
      - name: Configure CMake
        run: |
          if [[ ${{ matrix.os }} == macos-* ]]; then
            cmake -B ./src/epscript/build \
                  -S ./src/epscript \
                  -DCMAKE_OSX_ARCHITECTURES=arm64 \
                  -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}
          elif [[ ${{ matrix.os }} == windows-* ]]; then
            cmake -B ./src/epscript/build \
                  -S ./src/epscript \
                  -A x64 \
                  -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}
          else 
            cmake -B ./src/epscript/build \
                  -S ./src/epscript \
                  -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}
          fi
          
      - name: Setup MSBuild (Windows Only)
        if: startsWith(matrix.os, 'windows')
        uses: microsoft/setup-msbuild@v2
        
      - name: Build
        run: |
          chmod -R 777 ./src/epscript
          if [[ ${{ matrix.os }} == windows-* ]]; then
            cmake --build ./src/epscript/build --config ${{ env.BUILD_TYPE }}
            msbuild.exe ALL_BUILD.vcxproj /p:Configuration=${{ env.BUILD_TYPE }} /p:Platform=x64
          else
            cmake --build ./src/epscript/build --config ${{ env.BUILD_TYPE }}
          fi