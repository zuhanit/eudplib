name: Build eudplib 
on:
  release:
    types: [created]
  workflow_dispatch: 
  
env:
  BUILD_TYPE: Release
    
jobs:
  build_libepScript:
    strategy: 
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    name: epScript build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      
      - name: Cache CMake Build Directory
        id: epscript-cache
        uses: actions/cache@v3
        with:
          path: ./src/epscript/build
          key: cmake-build-${{ matrix.os }}-${{ env.BUILD_TYPE }}-${{ hashFiles('./src/epscript/**/*') }}
      
      - name: Configure CMake
        if: steps.epscript-cache.outputs.cache-hit != 'true'
        run: |
          if [[ ${{ matrix.os }} == macos-* ]]; then
            cmake -B ./src/epscript/build \
                  -S ./src/epscript \
                  -DCMAKE_OSX_ARCHITECTURES=arm64 \
                  -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}
          elif [[ ${{ matrix.os }} == windows-* ]]; then
            cmake -B ./src/epscript/build \
                  -S ./src/epscript \
                  -A x64 \
                  -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}
          else 
            cmake -B ./src/epscript/build \
                  -S ./src/epscript \
                  -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}
          fi
      
      - name: Build lemon2 on Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: |
          gcc ./src/epscript/lemon2.c -o ./src/epscript/lemon2
        
        
      - name: Build
        if: steps.epscript-cache.outputs.cache-hit != 'true'
        run: |
          chmod -R 777 ./src/epscript
          if [[ ${{ matrix.os }} == windows-* ]]; then
            cmake --build ./src/epscript/build --config ${{ env.BUILD_TYPE }}
          else
            cmake --build ./src/epscript/build --config ${{ env.BUILD_TYPE }}
          fi
          
  build_eudplib:
    needs:
      build_libepScript
    strategy: 
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    name: eudplib build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
       shell: bash 
    
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          python-version: 3.11
          
      - name: Install dependencies
        run: |
          uv venv
          uv pip install -r pyproject.toml
          uv pip install maturin
      
      - name: Build app
        run: |
          if [[ ${{ matrix.os }} == windows-* ]]; then
            source .venv/Scripts/activate
          else
            source .venv/bin/activate
          fi
          maturin build
           